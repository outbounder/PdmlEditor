<?xml version="1.0" encoding="utf-8"?>
<mx:TreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/halo"
				creationComplete="onCreationComplete()"
				dragEnter="onDragEnter(event)"
				dragDrop="onDragDrop(event)"
				dragOver="onDragOver()"
				dragExit="onDragExit()">
	
	<fx:Script>
		<![CDATA[
			import components.repo.RepoBrowserTree;
			
			import data.model.PdmlFile;
			
			import mx.events.DragEvent;
			import mx.managers.DragManager;
			
			public var ownerBrowser:RepoBrowserTree;
			
			private function onCreationComplete():void
			{
				this.addChildAt(this.dragHighlight, 0);
			}
			
			private function onDragEnter(e:DragEvent):void
			{
				var file:File = this.data as File;
				if(e.dragSource.hasFormat("pdmlFile") && file.isDirectory)
					DragManager.acceptDragDrop(this);
			}
			
			private function onDragDrop(event:DragEvent):void
			{
				this.dragHighlight.visible = false;
				this.ownerBrowser.currentState = 'pdmlFileTreeOptions';
				
				var pdmlFile:PdmlFile = event.dragSource.dataForFormat('pdmlFile') as PdmlFile;
				this.ownerBrowser.pdmlFileTreeOptionsView.rootFolder = ((event.target as RepoTreeItemRenderer).data as File).nativePath;
				this.ownerBrowser.pdmlFileTreeOptionsView.pdmlFile = pdmlFile;
			}
			
			private function onDragOver():void
			{
				this.dragHighlight.visible = true;
			}
			
			private function onDragExit():void
			{
				this.dragHighlight.visible = false;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Group id="dragHighlight" width="{this.width}" height="{this.height}" visible="false" >
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor alpha="0.2" color="blue" />
				</s:fill>		
			</s:Rect>	
		</s:Group>
	</fx:Declarations>
		
</mx:TreeItemRenderer>
